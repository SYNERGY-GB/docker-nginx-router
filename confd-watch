#!/bin/bash

set -eo pipefail

#Check for required parameters
: ${ETCD_HOST?"ETCD_HOST must be defined in order to load configuration."}
: ${ENDPOINT?"ENDPOINT must be defined in order to load configuration."}

#Set up defaults
export UPDATE_INTERVAL=${UPDATE_INTERVAL:-10}
export NOTFOUND_URL=${NOTFOUND_URL:-https://en.wikipedia.org/wiki/HTTP_404}
export TLS=${TLS:-1}
export TLS_CERT=${TLS_CERT:-cert.crt}
export TLS_KEY=${TLS_KEY:-cert.key}
export PROXY_TIMEOUT=${PROXY_TIMEOUT:-60s}

ETCD_PORT=${ETCD_PORT:-4001}
ETCD_PREFIX=${ETCD_PREFIX:-/apps}

ETCD=$ETCD_HOST:$ETCD_PORT

# Start the Nginx service using the generated config
echo "[nginx] starting nginx service..."
service nginx start

# Try to make initial configuration every 5 seconds until successful
until confd -prefix $ETCD_PREFIX -onetime -node $ETCD; do
    echo "[nginx] waiting for confd to create initial nginx configuration."
    sleep 5
done

# Put a continual polling `confd` process into the background to watch
# for changes every $UPDATE_INTERVAL seconds
confd -interval $UPDATE_INTERVAL -prefix $ETCD_PREFIX -node $ETCD &
echo "[nginx] confd is now monitoring etcd for changes..."

# Follow the logs to allow the script to continue running
tail -f /var/log/nginx/*.log
